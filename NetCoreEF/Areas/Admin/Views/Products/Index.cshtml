

@model IEnumerable<NetCoreEF.Data.Product>
@inject IAuthorizationService autService


@{
    ViewData["Title"] = "Index";
  var hasWriteAccess = await autService.AuthorizeAsync(User, "ProductWritePolicy");


}

<h1>Index</h1>

<p>
  @* Role ve User Claimleri kontrol etmek için kullanabiliriz User.HasClaim *@
  @if(User.HasClaim(x=> x.Value == "Delete" && x.Type == "ProductWrite"))
  {
  <a asp-action="Create">Create New</a>
  }
  
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.QuantityPerUnit)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitsInStock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitsOnOrder)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReorderLevel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Discontinued)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Supplier)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.QuantityPerUnit)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitsInStock)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitsOnOrder)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReorderLevel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Discontinued)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Supplier.ContactName)
            </td>
            <td>

          @if(hasWriteAccess.Succeeded) {

          <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> 
          <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
          }

          <a asp-action="Details" asp-route-id="@item.ProductId">Details</a> 

                
            </td>
        </tr>
}
    </tbody>
</table>
